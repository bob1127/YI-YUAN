@tailwind base;
@tailwind components;
@tailwind utilities;


/* 自定義文字 */
body{
  @apply bg-[var(--main-beige-color)]
}
h1 {
  @apply text-[3rem] font-semibold text-gray-800 mt-4 mb-6;
}
h2 {
  @apply text-[2.2rem] font-semibold  mt-4 mb-6;
  color: var( --font-deep-black);
}
p{
  @apply text-[1rem] ;
  color: var(--dark-light-gray);
}
:root {
  /* 標題和內文顏色 */
  --font-deep-black: #1b1b1b;  
  --font-deep-gray: #1f1f1f; 
  --dark-light-gray: #3a3a3a;    
/* 主題色和輔助色 */
   --main-green-color: #333;
   --main-beige-color: #f5f1ec;
   
/* 第三方插件顏色 */
  --white-gradient: repeating-linear-gradient(
    100deg,
    var(--white) 0%,
    var(--white) 7%,
    var(--transparent) 10%,
    var(--transparent) 12%,
    var(--white) 16%
  );
  --dark-gradient: repeating-linear-gradient(
    100deg,
    var(--black) 0%,
    var(--black) 7%,
    var(--transparent) 10%,
    var(--transparent) 12%,
    var(--black) 16%
  );
  --aurora: repeating-linear-gradient(
    100deg,
    var(--blue-500) 10%,
    var(--indigo-300) 15%,
    var(--blue-300) 10%,
    var(--violet-200) 15%,
    var(--blue-400) 10%
  );
}
@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

.animate-scroll {
  animation: scroll var(--animation-duration) linear infinite;
}

/* 支援 mask-image */
@layer utilities {
  .mask-radial {
    mask-image: radial-gradient(ellipse at 20% 0%, black 10%, transparent 30%);
  }
}

body {
  transition-property: opacity, transform, filter, background;
  transition-timing-function: ease-in-out;
  transition-duration: 500ms;
}

.page-transition {
  opacity: 0;
  background: black;
  transform: translateY(40px);
  filter: blur(12px);
}
.pre-loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: var(--bg);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  z-index: 100000;
}

.progress-bar {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 7px;
  background-color: var(--text);
  transform: scaleX(0);
  transform-origin: left;
}

.home-page {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero-img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero-title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 60%;
  text-align: center;
}

.hero-title .line {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
}

.hero-title h1 {
  position: relative;
  transform: translateY(70px);
  will-change: transform;
  color:white;
}

@media (max-width: 900px) {
  .hero-title {
    width: 90%;
  }
}
@layer base {
  .wrapper {
    --col-width: 130px;

    @apply grid w-full gap-2 md:gap-4;
    grid-template-columns:
      [full-start]
      minmax(0, 100%)
      [wide-start]
      repeat(2, minmax(0, var(--col-width)))
      [narrow-start]
      repeat(8, minmax(0, var(--col-width)))
      [narrow-end]
      repeat(2, minmax(0, var(--col-width)))
      [wide-end]
      minmax(0, 100%)
      [full-end];
  }

  .wrapper > * {
    grid-column: wide;
  }

  .wrapper > .full-bleed {
    grid-column: full;
  }

  @media (min-width: theme("screens.md")) {
    .wrapper > * {
      grid-column: narrow;
    }
  }

  @keyframes fill-text {
    to {
      --progress: 100%;
    }
  }

  @keyframes parallax-movement {
    to {
      transform: translateY(var(--movement));
    }
  }

  /* The @property tells the browser what type this variable is,
    a percentage in our case. If we would not add that here, the
    browser would not be able to animate it from 0% to 100%.
  */
  @property --progress {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
  }
}

@layer components {
  .reveal-text {
    --faded-color: #ccc;
    --higlighted-color: #111;
    /* Compared to the video, I updated this article to reflect
       a solution that's so much easier. Creating a single gradient
       with two colors, and then animating the starting/end point of
       the two colors with a CSS variable --progress. CSS @property
       makes this so much easier for us now.
    */
    --progress: 0%;
    background-image: linear-gradient(
      to right,
      var(--higlighted-color),
      var(--higlighted-color) var(--progress),
      var(--faded-color) var(--progress),
      var(--faded-color)
    );
    background-clip: text;
    background-repeat: no-repeat;
    color: transparent;
    display: inline;
    animation: fill-text linear both;
    animation-timeline: --reveal-wrapper;
    animation-range: entry 200% cover 80%;
  }

  .parallax-image {
    transform: translateY(0px);
    animation: parallax-movement linear both;
    animation-timeline: --parallax-wrapper;
    animation-range: entry 25% cover 80%;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* 自訂 AOS 動畫：fade-up-blur */
[data-aos="fade-up-blur"] {
  opacity: 0.8;
  transform: translateY(20px);
  filter: blur(50px); /* 初始模糊程度 */
  transition: 
    opacity 1.2s ease-out, 
    transform 1.2s ease-out, 
    filter 3s cubic-bezier(0.19, 1, 0.22, 1); /* 讓模糊過渡更慢更順暢 */
}

[data-aos="fade-up-blur"].aos-animate {
  opacity: 1;
  transform: translateY(0);
  filter: blur(0px); /* 清晰 */
}
